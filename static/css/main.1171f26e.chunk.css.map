{"version":3,"sources":["ProjectCard.scss","App.css","styles.scss","../../node_modules/mdbootstrap/scss/core/_mixins.scss"],"names":[],"mappings":"AAAA,SACC,YAAa,CACb,UAAW,CACX,4BAA6B,CAC7B,MAGA,WAAY,CACZ,YAAa,CACb,YAAa,CACb,eAAiB,CACjB,iBAAkB,CAClB,YAAa,CACb,oBAAqB,CACrB,uBAAyB,CACzB,oCAA2C,CAC3C,YAGA,2BAA4B,CAC5B,mBAGA,SAAU,CACV,kBAGA,SAAU,CACV,uBAA0B,CAC1B,aAGA,UAAW,CAIX,aAAc,CAGd,yBAA8B,CAC9B,SAAU,CACV,cAAgB,CAChB,SAAU,CACV,uBAVA,iBAAkB,CAClB,KAAM,CACN,MAAO,CAEP,UAAW,CACX,WAaO,CARP,UAKA,gBAGO,CACP,YAGA,iBAAkB,CAClB,SAAU,CACV,UAAY,CACZ,SAAU,CACV,0BAA2B,CAC3B,cAAgB,CAChB,eAGA,QAAW,CACX,cAGA,kBAAmB,CACnB,cAAe,CACf,cAAe,CACf,0BAGA,qBAA4B,CAC5B,cAAgB,CC3EjB,KACE,iBACF,CAEA,UACE,aAAc,CACd,mBACF,CAEA,8CACE,UACE,mDAA4C,CAA5C,2CACF,CACF,CAEA,YACE,wBAAyB,CACzB,gBAAiB,CACjB,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,sBAAuB,CACvB,4BAA6B,CAC7B,UACF,CAEA,UACE,aACF,CAEA,iCACE,GACE,sBACF,CACA,GACE,uBACF,CACF,CAPA,yBACE,GACE,sBACF,CACA,GACE,uBACF,CACF,CC/BA,KACI,sBACY,CACf,UADG,WAUc,CATjB,KAGG,SAAU,CACV,QAAS,CACT,WAAY,CACZ,cAAe,CAEf,wBAAyB,CACzB,aAAc,CACjB,QAIG,wBAAyB,CAC5B,cAIG,aAAc,CACjB,8BAGG,aAAc,CACjB,YAEG,wBAAyB,CAC5B,UAEG,sGAAA,CAAA,8FAA+F,CAClG,OAEG,aAAc,CACjB,oFAIG,uBAAyB,CAC5B,gDAEG,kCAAoC,CACvC,oBAEG,yCAA2C,CAC3C,sCAAwC,CAC3C,2BAEG,uBAAyB,CACzB,kCAAoC,CACpC,qBAA4B,CAC/B,QAGG,wBAAyB,CAC5B,YAGC,YAAa,CACb,qBAAsB,CACtB,qBAAsB,CACtB,YAAa,CACb,UAAU,CACV,sEAA0D,CAC1D,eAAgB,CACjB,kBAGG,UAAW,CACX,iBAAkB,CAClB,UAAU,CACV,WAAW,CACX,UAAW,CACX,kEACA,CAAA,qBACA,CAAA,uBACU,CACb,SAAA,CAAA,4BAeU,GAAA,uBACF,CAAA,GAAA,6BAhBR,CAAA,CAAA,oBAeU,GAAA,uBACF,CAAA,GAAA,6BAIP,CAAA,CAAA,OAKA,8CAAA,CAAA,sCACD,CAAA,oBALC,SAAA,CAAW,UACX,CAAA,sBACA,CAAA,iBACA,CAAA,4wYAcA,CAZD,aAEG,WACA,CAAA,iBACA,CACW,UAOb,CAAA,QAKA,+CAAA,CAAA,uCACD,CAAA,sBALC,SAAA,CAAW,UACX,CAAA,sBACA,CAAA,iBACA,CAAA,wgHAcA,CAZD,cAEG,WACA,CAAA,iBACA,CACW,UAOb,CAAA,QAKA,+CAAA,CAAA,uCACD,CAAA,sBALC,SAAA,CAAW,UACX,CAAA,sBACA,CAAA,iBACA,CAAA,qxDAeE,CAbH,cAEG,WACA,CAAA,iBACA,CACW,UAQX,CAAA,QAAA,iBACA,CAAA,YACA,CAAA,qBACA,CAAA,sBACA,CAAA,qBACA,CAAA,kBACA,CAAA,sCACA,CAAA,WACH,CAAA,eAEc,UACX,CAAA,UACA,CAAA,gBACA,CAAA,WACA,CAAA,iBACA,CAAA,kBACA,CAAA,2DAAA,CAAA,mDACA,CAAA,aACH,CAAA,qBAIA,SAAA,CAAA,qCAGe,MAAA,uBACA,CAAA,IAAA,0BAJf,CAAA,CAAA,6BAGe,MAAA,uBACA,CAAA,IAAA,0BAGhB,CAAA,CAAA,kCACY,GAAA,0BADZ,CAAA,CAAA,0BACY,GAAA,0BAIR,CAAA,CAAA,QAAA,kBACH,CAEG,UAAW,UAGX,CAAA,SAAA,YACA,CAAA,qBACA,CAAA,qBACA,CAAA,kBACH,CAAA,gBAEc,UACX,CAAA,iBACU,CACV,OAAA,CAAW,QAEX,CAAA,MAAA,CAAU,UACV,CAAA,WACA,CAAW,UACX,CAAA,qBACA,CAAA,UAGA,CAAA,QAAA,uBAAA,CAAA,eAEA,CAAA,KAAA,CAAA,WACA,CAAW,UACd,CAAA,iBAGG,YACA,CAAA,kBACH,CAAA,YAEc,UACX,CAAW,UACX,CAAA,WAGA,CAAA,SACA,SAAA,CAAA,kBACA,CAAA,sBACA,CAAA,kBACA,CAAA,qBACA,CAAA,YACA,CAAA,aACA,CAAA,gBACH,CAGG,UAAA,oBACH,CAAA,qBAGG,YACA,CAAA,WACH,CAAA,8BAEG,YACA,CAAA,WACA,CAAA,UACH,CAAA,iBAGG,SAAA,CAAA,oBACH,CAAA,kBAGG,kBACH,CAAA,0BAGQ,GAAA,sBACA,CAAA,GAAA,uBAJR,CAAA,CAAA,kBAGQ,GAAA,sBACA,CAAA,GAAA,uBAGT,CAAA,CAAA,4BAEQ,GAAA,2BAGA,CAAA,GAAA,uBALR,CAAA,CAAA,oBAEQ,GAAA,2BAGA,CAAA,GAAA,uBAKJ,CAAA,CAAA,WACE,cAGE,CAAA,SAAA,qBACH,CAAA,cAGA,SAAA,CAAA,yBAID,cAEC,SChRD,CAAA,CAAA,yBDsRI,SAAA,kBCtRJ,CAAA,CAAA,yBD2RA,WACE,cACD,CAAA","file":"main.1171f26e.chunk.css","sourcesContent":[".wrapper {\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\tjustify-content: space-around;\r\n}\r\n\r\n.card {\r\n\twidth: 20rem;\r\n\theight: 360px;\r\n\tpadding: 1rem;\r\n\tbackground: white;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: flex-end;\r\n\ttransition: 0.4s ease-out;\r\n\tbox-shadow: 0px 7px 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.card:hover {\r\n\ttransform: translateY(-20px);\r\n}\r\n\r\n.card:hover:before {\r\n\topacity: 1;\r\n}\r\n\r\n.card:hover .info {\r\n\topacity: 1;\r\n\ttransform: translateY(0px);\r\n}\r\n\r\n.card:before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: rgba(0, 0, 0, 0.8);\r\n\tz-index: 2;\r\n\ttransition: 0.5s;\r\n\topacity: 0;\r\n}\r\n\r\n.card img {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tobject-fit: cover;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n}\r\n\r\n.card .info {\r\n\tposition: relative;\r\n\tz-index: 3;\r\n\tcolor: white;\r\n\topacity: 0;\r\n\ttransform: translateY(30px);\r\n\ttransition: 0.5s;\r\n}\r\n\r\n.card .info h1 {\r\n\tmargin: 0px;\r\n}\r\n\r\n.card .info p {\r\n\tletter-spacing: 1px;\r\n\tfont-size: 15px;\r\n\tmargin-top: 8px;\r\n}\r\n\r\n.card .info .button:hover {\r\n\ttransform: scale(1.05, 1.05);\r\n\ttransition: 0.2s;\r\n}",".App {\r\n  text-align: center;\r\n}\r\n\r\n.App-logo {\r\n  height: 40vmin;\r\n  pointer-events: none;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n  .App-logo {\r\n    animation: App-logo-spin infinite 20s linear;\r\n  }\r\n}\r\n\r\n.App-header {\r\n  background-color: #282c34;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: calc(10px + 2vmin);\r\n  color: white;\r\n}\r\n\r\n.App-link {\r\n  color: #61dafb;\r\n}\r\n\r\n@keyframes App-logo-spin {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n","@import \"../../node_modules/mdbootstrap/scss/core/mixins\";\r\n\r\n@import \"../../node_modules/mdbootstrap/scss/core/bootstrap/functions\";\r\n\r\n@import \"../../node_modules/mdbootstrap/scss/core/bootstrap/variables\";\r\n\r\nhtml {\r\n    scroll-behavior: smooth;\r\n    height: 100%;\r\n}\r\n\r\nbody {\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100vw;\r\n    max-width: 100%;\r\n    height: 100%;\r\n    background-color: #0D1B2A;\r\n    color: #E0E1DD;\r\n}\r\n\r\n#navbar {\r\n    transition: top 0.3s;\r\n    background-color: #0B3C5D;\r\n}\r\n\r\nh1,\r\n.display-4 {\r\n    color: #35A1E9;\r\n}\r\n.header h1,\r\n.header .display-4 {\r\n    color: #E0E1DD;\r\n}\r\n.header-bar {\r\n    background-color: #35A1E9;\r\n}\r\n.nav-icon {\r\n    filter: invert(52%) sepia(92%) saturate(424%) hue-rotate(167deg) brightness(91%) contrast(100%);\r\n}\r\nstrong {\r\n    color: #35A1E9;\r\n}\r\n\r\n// material ui form color override\r\n.email-send, .btn-outline-default, form, input, form .active, .btn-outline-default:focus {\r\n    color: #E0E1DD !important;\r\n}\r\n.btn-outline-default, .btn-outline-default, .btn-outline-default:focus {\r\n    border: 2px solid #E0E1DD !important;\r\n}\r\n.form-control:focus {\r\n    border-bottom: 1px solid #E0E1DD !important;\r\n    box-shadow: 0 1px 0 0 #E0E1DD !important;\r\n}\r\n.btn-outline-default:hover, .btn-outline-default:hover { \r\n    color: #E0E1DD !important;\r\n    border: 2px solid #E0E1DD !important;\r\n    transform: scale(1.05, 1.05);\r\n}\r\n\r\n.footer {\r\n    background-color: #0B3C5D;\r\n}\r\n\r\n#topwrapper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-sizing: border-box;\r\n  height: 100vh;\r\n  width:100%;\r\n  background: linear-gradient( #090A0F95 0%, #01015C80 100%);\r\n  overflow: hidden;\r\n}\r\n\r\n#topwrapper::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width:100%;\r\n    height:100%;\r\n    z-index: -1;\r\n    background-image: url(\"./images/desktop.jpg\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    opacity: 1;\r\n}\r\n\r\n@function multiple-box-shadow($n) {\r\n  $value: '#{random(2000)}px #{random(2000)}px #FFF';\r\n  @for $i from 2 through $n {\r\n    $value: '#{$value} , #{random(2000)}px #{random(2000)}px #FFF';\r\n  }\r\n  @return unquote($value);\r\n}\r\n$shadows-small:  multiple-box-shadow(700); //700\r\n$shadows-medium: multiple-box-shadow(200); //200\r\n$shadows-big:    multiple-box-shadow(100); //100\r\n\r\n\r\n@keyframes animStar {\r\n    from { transform: translateY(0px); }\r\n    to { transform: translateY(-2000px); }\r\n}\r\n\r\n#stars {\r\n  width: 1px;\r\n  height: 1px;\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  box-shadow: $shadows-small;\r\n  animation: animStar 50s linear infinite;\r\n}\r\n#stars:after {\r\n    content: \" \";\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    top: 2000px;\r\n    width: 1px;\r\n    height: 1px;\r\n    background: transparent;\r\n    box-shadow: $shadows-small;\r\n}    \r\n#stars2 {\r\n  width: 2px;\r\n  height: 2px;\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  box-shadow: $shadows-medium;\r\n  animation: animStar 100s linear infinite;\r\n}\r\n#stars2:after {\r\n    content: \" \";\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    top: 2000px;\r\n    width: 2px;\r\n    height: 2px;\r\n    background: transparent;\r\n    box-shadow: $shadows-medium;\r\n}\r\n#stars3 {\r\n  width: 3px;\r\n  height: 3px;\r\n  background: transparent;\r\n  border-radius: 50%;\r\n  box-shadow: $shadows-big;\r\n  animation: animStar 150s linear infinite\r\n}\r\n#stars3:after {\r\n    content: \" \";\r\n    position: absolute;\r\n    border-radius: 50%;\r\n    top: 2000px;\r\n    width: 3px;\r\n    height: 3px;\r\n    background: transparent;\r\n    box-shadow: $shadows-big;\r\n}\r\n\r\n.header {\r\n    align-self: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    text-shadow: 2px 3px 5px rgba(0,0,0,0.5);\r\n    margin: auto;\r\n}\r\n.fa-angle-down {\r\n    color: #fff;\r\n    opacity: 0.5;\r\n    margin: 10px auto;\r\n    padding: 5px;\r\n    text-align: center;\r\n    transition: all .2s;\r\n    animation: down-arrow-bounce 1s ease-in-out infinite;\r\n    font-size: 3em;\r\n}\r\n\r\n.fa-angle-down:hover {\r\n    opacity: 1;\r\n}\r\n\r\n@keyframes down-arrow-bounce {\r\n    0%, 100%  { transform: translateY(0); }\r\n    50%       { transform: translateY(10px); }\r\n}\r\n\r\n@keyframes down-arrow-end {\r\n    100%  { transform: translateY(10px); }\r\n}\r\n\r\n#navbar {\r\n    transition: top 0.3s;\r\n}\r\n.nav-icon {\r\n    width: 2rem;\r\n}\r\n#aboutme {\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n}\r\n#aboutme::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    width:100%;\r\n    height:100%;\r\n    z-index: -1;\r\n    background-size: cover;\r\n    opacity: 0.5;\r\n}\r\n.sticky {\r\n    position: sticky;\r\n    top: 0px;\r\n    z-index: 102;\r\n    width: 100%;\r\n}\r\n\r\n.aboutme-content {\r\n    display: flex;\r\n    flex-direction: row;\r\n}\r\n.header-bar {\r\n    height: 2px;\r\n    width: 50vw;\r\n    margin: auto;\r\n}\r\n.me-card {\r\n    width: 95%;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: white;\r\n    padding: 1rem;\r\n    color: #8a8a8a;\r\n    line-height: 24px;\r\n}\r\n\r\n#headshot {\r\n    border-radius: 9999px;\r\n}\r\n\r\n.tech-icon-container {\r\n    display: flex;\r\n    z-index: 101;\r\n}\r\n.tech-icon-wrapper, .tech-icon {\r\n    height: 2.5em;\r\n    width: 2.5em;\r\n    opacity: 0.8;\r\n}\r\n.tech-icon:hover {\r\n    opacity: 1;\r\n    transform: scale(1.1);\r\n}\r\n\r\n.projects-wrapper {\r\n    margin-bottom: 30vh;\r\n}\r\n\r\n@keyframes rotate {\r\n\tfrom { \ttransform: rotate(0deg) }\r\n\tto   {  transform: rotate(360deg) }\r\n}\r\n\r\n@keyframes moveDown {\r\n    from {\r\n        transform: translateY(-5rem);\r\n    }\r\n    to {\r\n        transform: translateY(0rem);\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(xs) {\r\n    .display-1 {\r\n      font-size: 5rem;\r\n    }\r\n    .me-card {\r\n        flex-direction: column;\r\n    }\r\n    .card-img-top {\r\n        width: 70%;\r\n    }\r\n}\r\n\r\n@include media-breakpoint-up(sm) {\r\n    .card-img-top {\r\n        width: 40%;\r\n    }\r\n    \r\n}\r\n  \r\n@include media-breakpoint-up(md) {\r\n    .me-card {\r\n        flex-direction: row;\r\n    }\r\n}\r\n  \r\n@include media-breakpoint-up(lg) {\r\n    .display-1 {\r\n      font-size: 6rem;\r\n    }\r\n}","// Mixins\n// Bootstrap Mixins\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min !=0, $min, null);\n}\n\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02px, null);\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  }\n\n  @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  }\n\n  @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min !=null and $max !=null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n\n  @else if $max==null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  }\n\n  @else if $min==null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min !=null and $max !=null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n\n  @else if $max==null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  }\n\n  @else if $min==null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints)==null, \"\", \"-#{$name}\");\n}\n\n@mixin hover {\n  &:hover { @content; }\n}\n\n@mixin hover-focus {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n// Background color\n@mixin bg-variant($parent, $color) {\n  #{$parent} {\n    background-color: $color !important;\n  }\n\n  a#{$parent},\n  button#{$parent} {\n    @include hover-focus {\n      background-color: darken($color, 10%) !important;\n    }\n  }\n}\n\n// Typography\n@mixin text-emphasis-variant($parent, $color) {\n  #{$parent} {\n    color: $color !important;\n  }\n\n  a#{$parent} {\n    @include hover-focus {\n      color: darken($color, 10%) !important;\n    }\n  }\n}\n\n// Placeholder\n@mixin placeholder {\n  &::placeholder {\n    @content;\n  }\n}\n\n/// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-container($gutter: $grid-gutter-width) {\n  width: 100%;\n  padding-right: $gutter / 2;\n  padding-left: $gutter / 2;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n// For each breakpoint, define the maximum width of the container in a media query\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\n\n  @each $breakpoint,\n    $container-max-width in $max-widths {\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      max-width: $container-max-width;\n    }\n  }\n}\n\n@mixin make-row() {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: ($grid-gutter-width / -2);\n  margin-left: ($grid-gutter-width / -2);\n}\n\n@mixin make-col-ready() {\n  position: relative;\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we use `flex` values\n  // later on to override this initial width.\n  width: 100%;\n  min-height: 1px; // Prevent collapsing\n  padding-right: ($grid-gutter-width / 2);\n  padding-left: ($grid-gutter-width / 2);\n}\n\n@mixin make-col($size, $columns: $grid-columns) {\n  flex: 0 0 percentage($size / $columns);\n  // Add a `max-width` to ensure content within each column does not blow out\n  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\n  // do not appear to require this.\n  max-width: percentage($size / $columns);\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: $size / $columns;\n  margin-left: if($num==0, 0, percentage($num));\n}\n\n@mixin clearfix() {\n  &::after {\n    display: block;\n    clear: both;\n    content: \"\";\n  }\n}\n\n@mixin float-left {\n  float: left !important;\n}\n\n@mixin float-right {\n  float: right !important;\n}\n\n@mixin float-none {\n  float: none !important;\n}\n\n// CSS image replacement\n@mixin text-hide($ignore-warning: false) {\n  // stylelint-disable-next-line font-family-no-missing-generic-family-keyword\n  font: 0/0 a;\n  color: transparent;\n  text-shadow: none;\n  background-color: transparent;\n  border: 0;\n\n  @if ($ignore-warning !=true) {\n    @warn \"The `text-hide()` mixin has been deprecated as of v4.1.0. It will be removed entirely in v5.\";\n  }\n}\n\n// Only display content to screen readers\n//\n// See: https://a11yproject.com/posts/how-to-hide-content/\n// See: https://hugogiraudel.com/2016/10/13/css-hide-and-seek/\n\n@mixin sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n}\n\n// Use in conjunction with .sr-only to only display content when it's focused.\n//\n// Useful for \"Skip to main content\" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1\n//\n// Credit: HTML5 Boilerplate\n\n@mixin sr-only-focusable {\n\n  &:active,\n  &:focus {\n    position: static;\n    width: auto;\n    height: auto;\n    overflow: visible;\n    clip: auto;\n    white-space: normal;\n  }\n}\n\n@mixin invisible($visibility) {\n  visibility: $visibility !important;\n}\n\n// MDB Mixins\n@mixin hover-focus-active {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n\n// Set the color of the button and badge\n@function set-notification-text-color($color) {\n  @if (lightness($color) > 80) {\n    @return $black-base; // Lighter backgorund, return dark color\n  }\n\n  @else {\n    @return $white-base; // Darker background, return light color\n  }\n}\n\n// Make button\n@mixin make-button ($name, $color) {\n  .btn-#{$name} {\n    color: set-notification-text-color($color);\n    background-color: $color !important;\n\n    &:hover {\n      color: set-notification-text-color($color);\n      background-color: lighten($color, 5%);\n    }\n\n    &:focus,\n    &.focus {\n      box-shadow: $z-depth-1-half;\n    }\n\n    &:focus,\n    &:active,\n    &.active {\n      background-color: darken($color, 20%);\n    }\n\n    &.dropdown-toggle {\n      background-color: $color !important;\n\n      &:hover,\n      &:focus {\n        background-color: lighten($color, 5%) !important;\n      }\n    }\n\n    &:not([disabled]):not(.disabled):active,\n    &:not([disabled]):not(.disabled).active,\n    .show > &.dropdown-toggle {\n      background-color: darken($color, 20%) !important;\n      box-shadow: $z-depth-1-half;\n    }\n\n    &:not([disabled]):not(.disabled):active:focus,\n    &:not([disabled]):not(.disabled).active:focus,\n    .show > &.dropdown-toggle:focus {\n      box-shadow: $z-depth-1-half;\n    }\n  }\n\n  .#{$name}-ic {\n    color: $color !important;\n\n    &:hover,\n    &:focus {\n      color: $color;\n    }\n  }\n\n  a.btn:not([href]):not([tabindex]),\n  a.btn:not([href]):not([tabindex]):focus,\n  a.btn:not([href]):not([tabindex]):hover {\n    color: set-notification-text-color($color);\n  }\n  table {\n    &.table {\n      a {\n        &.btn {\n          &.btn-#{$name} {\n            color: set-notification-text-color($color);\n          }\n        }\n      }\n    }\n  }\n}\n\n// Make outline button\n@mixin make-outline-button ($name, $color) {\n  .btn-outline-#{$name} {\n    color: $color !important;\n    background-color: transparent !important;\n    border: 2px solid $color !important;\n\n    &:hover,\n    &:focus,\n    &:active,\n    &:active:focus,\n    &.active {\n      color: $color !important;\n      background-color: transparent !important;\n      border-color: $color !important;\n    }\n\n    &:not([disabled]):not(.disabled):active,\n    &:not([disabled]):not(.disabled).active,\n    .show > &.dropdown-toggle {\n      background-color: transparent !important;\n      border-color: $color !important;\n      box-shadow: $z-depth-1-half;\n    }\n\n    &:not([disabled]):not(.disabled):active:focus,\n    &:not([disabled]):not(.disabled).active:focus,\n    .show > &.dropdown-toggle:focus {\n      box-shadow: $z-depth-1-half;\n    }\n  }\n}\n\n// Make gradient\n@mixin make-gradient($name, $value) {\n  .#{$name}-gradient {\n    background: linear-gradient(40deg, map-get($value, start), map-get($value, end)) !important;\n  }\n}\n\n$opacity: .9 !default;\n\n// Make gradient\n@mixin make-gradient-rgba($name, $value) {\n  .#{$name}-gradient-rgba {\n    background: linear-gradient(40deg, map-get($value, start), map-get($value, end)) !important;\n  }\n}\n\n// Make gradient button\n@mixin make-gradient-button($name, $value) {\n  .btn {\n    &.#{$name}-gradient {\n      color: $white-base;\n      transition: .5s ease;\n\n      &:hover,\n      &:focus,\n      &:active,\n      &:active:focus &.active {\n        background: linear-gradient(lighten(map-get($value, start), 5%), lighten(map-get($value, end), 5%));\n      }\n    }\n  }\n}\n\n// Button size\n@mixin button-size($padding-y, $padding-x, $font-size) {\n  padding: $padding-y $padding-x;\n  font-size: $font-size;\n}\n\n@mixin make-badge($name, $color) {\n  .badge-#{$name} {\n    color: set-notification-text-color($color) !important;\n    background-color: $color !important;\n  }\n}\n\n// Make input\n@mixin make-input($margin-bottom, $label-font-size, $label-active-font-size, $top, $prefix-font-size, $margin-left, $width, $margin-left-2) {\n  .validate {\n    margin-bottom: $margin-bottom;\n  }\n\n  label {\n    font-size: $label-font-size;\n\n    &.active {\n      font-size: $label-active-font-size;\n    }\n  }\n\n  .prefix {\n    top: $top;\n    font-size: $prefix-font-size;\n\n    ~ input,\n    ~ textarea {\n      width: $width;\n      margin-left: $margin-left;\n    }\n\n    ~ label {\n      margin-left: $margin-left;\n    }\n\n    ~ .form-text {\n      margin-left: $margin-left-2;\n    }\n  }\n}\n\n// Make navbar\n@mixin make-navbar($color-0, $background-image, $color, $color-2, $color-3) {\n  .navbar-nav {\n    .nav-item {\n      .nav-link {\n        &.disbled {\n          color: $color-0;\n\n          &:hover {\n            color: $color-0;\n          }\n        }\n      }\n    }\n  }\n\n  .navbar-toggler-icon {\n    cursor: pointer;\n    background-image: $background-image;\n  }\n\n  .breadcrumb,\n  .navbar-nav {\n    .nav-item {\n      .nav-link {\n        color: $color;\n        transition: $navbar-nav-transition;\n\n        &:hover {\n          color: $color-2;\n        }\n      }\n\n      &.active > .nav-link {\n        background-color: $color-3;\n\n        &:hover {\n          color: $color;\n        }\n      }\n    }\n  }\n\n  .navbar-toggler {\n    color: $color;\n  }\n\n  form {\n    .md-form {\n      input {\n        border-bottom: 1px solid $color;\n\n        &:focus:not([readonly]) {\n          border-color: $input-md-focus-color;\n        }\n      }\n\n      .form-control {\n        color: $color;\n\n        @include placeholder {\n          font-weight: $navbar-font-weight;\n          color: $color;\n        }\n      }\n    }\n  }\n}\n\n// Make floating button\n@mixin make-btn-floating($width, $height, $font-size, $line-height) {\n  width: $width;\n  height: $height;\n\n  i {\n    font-size: $font-size;\n    line-height: $line-height;\n  }\n}\n\n// Keyframes\n@mixin keyframes($animation-name) {\n  @keyframes #{$animation-name} {\n    @content;\n  }\n}\n\n// Scroll bar and scroll spy width and height\n@mixin scroll-width($scrollbar-width) {\n  width: $scrollbar-width;\n}\n\n@mixin scroll-height($scrollbar-height) {\n  height: $scrollbar-height;\n}\n\n// Scroll spy font-weight\n@mixin scrollspy-font-weight($scrollspy-font-weight) {\n  font-weight: $scrollspy-font-weight;\n}\n\n// Switch width and height\n@mixin switch-width-height($switchWidth, $switchHeight) {\n  width: $switchWidth;\n  height: $switchHeight;\n}\n\n// Make Box-shadows\n@mixin box-shadows($shadow...) {\n  box-shadow: $shadow;\n}\n\n// Make Transition\n@mixin transition-main($transition...) {\n  transition: $transition;\n}\n\n// Make border-radius scrollspy\n@mixin scrollspy-border-radius($scrollspy-radius) {\n  border-radius: $scrollspy-radius;\n}\n\n// Make border-radius scrollspy 4rows\n@mixin scrollspy-border-radius-4rows($top-left, $top-right, $bottom-right, $bottom-left) {\n  border-radius: $top-left $top-right $bottom-right $bottom-left;\n}\n\n//Make animation for progresss\n@mixin progress-animation-default($animation...) {\n  animation: $animation;\n}\n\n//Make transform\n@mixin transform($transform...) {\n  transform: $transform;\n}\n"]}